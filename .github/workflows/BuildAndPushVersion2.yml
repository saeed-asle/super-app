name: Build and Push Images version 2
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]  
env:
  REGISTRY: docker.io
  IMAGE_NODE: saeedasle/super-app-node
  IMAGE_PHP: saeedasle/super-app-php

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log into Docker Hub
      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      # Step 4: Generate Image Tag
      - name: Generate Image Tag
        run: echo "IMAGE_TAG=version2-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Step 5: Build Node.js Container
      - name: Build Node.js container
        uses: docker/build-push-action@v5
        with:
          context: ./node
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NODE }}:${{ env.IMAGE_TAG }}

      # Step 6: Build PHP Container
      - name: Build PHP container
        uses: docker/build-push-action@v5
        with:
          context: ./php
          push: false 
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PHP }}:${{ env.IMAGE_TAG }}

      # Step 7: Push Node.js Container to Docker Hub
      - name: Push Node.js container
        uses: docker/build-push-action@v5
        with:
          context: ./node
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NODE }}:${{ env.IMAGE_TAG }}

      # Step 8: Push PHP Container to Docker Hub
      - name: Push PHP container
        uses: docker/build-push-action@v5
        with:
          context: ./php
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PHP }}:${{ env.IMAGE_TAG }}
